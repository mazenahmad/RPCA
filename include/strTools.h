/*
 * strTools.h
 *
 *  Created on: Apr 2, 2018
 *      Author: mazen
 */

#ifndef INCLUDE_STRTOOLS_H_
#define INCLUDE_STRTOOLS_H_
/////////////////////////////////////////////////////////////////////////////////////////////////
////========================================================================================/////
/////////////////////////////////////////////////////////////////////////////////////////////////
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
//#include "atoms.h"
#include "typedefs.h"
////========================================================================================/////







/////////////////////////////////////////////////////////////////////////////////////////////////
////================ 					ATOMS  STURCTURES				====================/////
/////////////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////
/****************************************************************************
 * 			structure contains atom information for one atom				*
 ***************************************************************************/
typedef struct
{
	char name[5];            /* standard (pdb or mol2) name of the atom  */
	int  resi;               /* residue number                           */
	char resname[5];         /* residue number                           */
	char chid ;              /*  chain ID                                */
	char element[3];		 /*  the elemnt                              */
    char  Record[7];              /* ATOM or HETATEM                     */
	int  atomnr;                  /* PDB atom number                     */
} atominf_t ;

/////////////////////////////////////////////////////////////////////////////


////====================================================================/////

/////////////////////////////////////////////////////////////////////////////
////================ 	RESIDUE  STURCTURES			====================/////
/////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////
/****************************************************************************
 * 				The terminal type of the protein amino acid					*
 * Cter= C-terminal															*
 * Nter= N-terminal															*
 * Pter= peptidic <=> connected in both sides								*
 * Ster = separate AA not connected											*
 ****************************************************************************/
typedef enum
{
	Nter = 1,    		/* N-terminal 								*/
	Cter,               /* C-terminal 								*/
	Pter,				/* peptidic 	<=> connected in both sides	*/
	Ster,				/*  separate AA not connected				*/
}Tertype_t;
/////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////
/****************************************************************************
 * 							Type of the residue 							*
 ***************************************************************************/
typedef enum
{
	hetatm ,		/*	small molecule		*/
	protein,		/*	Protein				*/
	modpro,			/*	Modified protein	*/
	rna,			/*	RNA					*/
	dna,			/*	DNA					*/
	wat,			/*	Water				*/
	ion				/*	Ion					*/
} resnature_t;
/////////////////////////////////////////////////////////////////////////////

/****************************************************************************
 *  		Info structure contains information about one residue			*
 ***************************************************************************/
typedef struct
{
	int		    nratoms;	/*  Nr of the atoms in the residue  */
	int		    *atoms;     /*  Array of the atom numbers       */
	int         resi;	    /*  Residue ID in pdb				*/
	char        resname[6]; /* residue name                     */
	Tertype_t   ter;        /*   terminal type                  */
	resnature_t   resnature;
	char		chid;
} resinfo_t;

/////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////
/****************************************************************************
 * 							all atoms and residues inf   					*
 ***************************************************************************/

typedef struct
{
	int nratoms;
	atominf_t *atom;
	resinfo_t *res;
	int nres;
	int nrchains;
}STR_INF_t;



///////////////////////////////













/////////////////////////////////////////////////////////////////////////////////////////////////

void writepdblines2file(FILE *fout,
						char * title,
						int model,
						int natoms,
						t_atoms  *atoms,
						int *index,
						rvec *x,
						int *x_index,
						double *bfactors);
////========================================================================================/////
/////////////////////////////////////////////////////////////////////////////////////////////////
void writepdb(	const char *fname,
						char * title,
						int model,
						int natoms,
						t_atoms  *atoms,
						int *index,
						rvec *x,
						int *x_index,
						double *bfactors,
						int append);


/////////////////////////////////////////////////////////////////////////////////////////////////
////========================================================================================/////
/////////////////////////////////////////////////////////////////////////////////////////////////
#endif /* INCLUDE_STRTOOLS_H_ */
